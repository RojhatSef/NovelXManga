@page
@model NovelXManga.Pages.Register.DeleteUserPageModel
@{
    @Html.AntiForgeryToken()
}
<link rel="stylesheet" href="~/css/DeleteuserStyleSheet.css" asp-append-version="true" />

<div class="delete-page-container">
    <h2>Delete User/s</h2>
    <p>Select a user to delete:</p>

    <input type="text" id="searchField" placeholder="Search for users..." />
    <div id="results"></div>


</div>

<script>
    document.getElementById('searchField').addEventListener('input', function (e) {
        const searchTerm = e.target.value;
        fetch(`/Register/DeleteUserPage?handler=SearchUsers&searchTerm=${searchTerm}`)
            .then(response => response.json())
            .then(data => {
                document.getElementById('results').innerHTML = data.map(user => `
                         <div class="user-details-container">
                        <p>-----------------------------</p>
                        <p>Role: ${user.roles.join(", ")}</p>
                        <p>Alias: ${user.alias}</p>
                        <p>Username: ${user.userName}</p>
                        <p>Email: ${user.email}</p>
                <button onclick="requestDeletion('${user.id}', '${user.userName}', '${user.alias}', '${user.email}', '${user.roles.join(", ")}')" class="delete-init-button">Delete this User</button>

                    </div>
                `).join('');
            });
    });

    function getAntiForgeryToken() {
        return document.querySelector('input[name="__RequestVerificationToken"]').value;
    }

    function requestDeletion(userId, userName, alias, email, roles) {
        // Construct the confirmation message with user details
        const message = `Are you sure you want to delete the following user?
                         \n\nUsername: ${userName}
                         \nAlias: ${alias}
                         \nEmail: ${email}
                         \nRole: ${roles}`;

        // Display the confirmation dialog
        if (confirm(message)) {
            fetch('/Register/DeleteUserPage?handler=DeleteUser', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': getAntiForgeryToken(),
                },
                body: JSON.stringify({ userId: userId }) // Pass the userId in the request body
            })
                .then(response => {
                    if (response.ok) {
                        alert("User successfully deleted.");
                        location.reload(); // Refresh the page to update the list of users
                    } else {
                        alert("An error occurred. User was not deleted.");
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert("An unexpected error occurred.");
                });
        }
    }

</script>

